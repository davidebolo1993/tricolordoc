(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{216:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/davidebolo1993/TRiCoLOR",target:"_blank",rel:"noopener noreferrer"}},[t._v("TRiCoLOR"),s("OutboundLink")],1),t._v(" is written in python 3 with supporting C++ scripts. It requires a working python 3 environment with gcc 4.8+ and cmake 3.2+ on a unix machine in order to be installed from source and run properly.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t ______ ______  __  ______  ______  __      ______  ______    \n\t/\\__  _/\\  == \\/\\ \\/\\  ___\\/\\  __ \\/\\ \\    /\\  __ \\/\\  == \\   \n\t\\/_/\\ \\\\ \\  __<\\ \\ \\ \\ \\___\\ \\ \\/\\ \\ \\ \\___\\ \\ \\/\\ \\ \\  __<   \n\t   \\ \\_\\\\ \\_\\ \\_\\ \\_\\ \\_____\\ \\_____\\ \\_____\\ \\_____\\ \\_\\ \\_\\ \n\t    \\/_/ \\/_/ /_/\\/_/\\/_____/\\/_____/\\/_____/\\/_____/\\/_/ /_/ v1.1\n\n")])])]),s("h2",{attrs:{id:"installation-from-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-from-source"}},[t._v("#")]),t._v(" Installation from source")]),t._v(" "),s("p",[t._v("A python 3 environment can be created using "),s("a",{attrs:{href:"https://www.anaconda.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Anaconda"),s("OutboundLink")],1),t._v(" and its minimal installer "),s("a",{attrs:{href:"https://docs.conda.io/en/latest/miniconda.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Miniconda"),s("OutboundLink")],1),t._v(". For the Ubuntu distro, for instance:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" build-essential g++ cmake libz-dev libcurl4-openssl-dev libssl-dev libbz2-dev  liblzma-dev libncurses5-dev\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" Miniconda3-latest-Linux-x86_64.sh\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" .bashrc\nconda update -y conda\nconda create -y -n tricolorenv "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),t._v("\n")])])]),s("p",[t._v("Once the python 3 environment has been created, conda can be used to install the required dependencies. As from v1.1, TRiCoLOR only requires bedtools in PATH (as this is required by pybedtools). However, tools like samtools and bcftools are useful to browse TRiCoLOR's output files.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("conda "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y -n tricolorenv -c bioconda bedtools\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#get htslib (optional)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LO https://github.com/samtools/htslib/releases/download/1.11/htslib-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -vxjf htslib-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" htslib-1.11 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#get samtools (optional)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LO https://github.com/samtools/samtools/releases/download/1.11/samtools-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -vxjf samtools-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" samtools-1.11 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#get bcftools (optional)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -LO https://github.com/samtools/bcftools/releases/download/1.11/bcftools-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -vxjf bcftools-1.11.tar.bz2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" bcftools-1.11 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/davidebolo1993/TRiCoLOR",target:"_blank",rel:"noopener noreferrer"}},[t._v("TRiCoLOR"),s("OutboundLink")],1),t._v(" can then be cloned and installed.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("conda activate tricolorenv\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recursive https://github.com/davidebolo1993/TRiCoLOR\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" TRiCoLOR\n./configure\npython setup.py "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nTRiCoLOR --help\n")])])]),s("h2",{attrs:{id:"docker-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-container"}},[t._v("#")]),t._v(" Docker container")]),t._v(" "),s("p",[t._v("For "),s("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),s("OutboundLink")],1),t._v(" users, "),s("a",{attrs:{href:"https://github.com/davidebolo1993/TRiCoLOR",target:"_blank",rel:"noopener noreferrer"}},[t._v("TRiCoLOR"),s("OutboundLink")],1),t._v(" is also available as a "),s("a",{attrs:{href:"https://hub.docker.com/r/davidebolo1993/tricolor",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker container"),s("OutboundLink")],1),t._v(". One can pull the image and run this as below.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#will require sudo privileges, probably")]),t._v("\ndocker pull davidebolo1993/tricolor\ndocker run davidebolo1993/tricolor TRiCoLOR --help\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#or using an interactive tty to the docker container")]),t._v("\ndocker run -ti davidebolo1993/tricolor \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$(tricolorenv) TRiCoLOR --help")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);